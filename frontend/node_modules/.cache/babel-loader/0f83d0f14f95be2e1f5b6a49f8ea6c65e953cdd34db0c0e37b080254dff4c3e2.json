{"ast":null,"code":"import React,{createContext,useState,useCallback}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const CartContext=/*#__PURE__*/createContext();export const CartProvider=_ref=>{let{children}=_ref;const[cartCount,setCartCount]=useState(0);const updateCartCount=useCallback(count=>{setCartCount(count);},[]);const addToCart=useCallback(async item=>{// Логика добавления товара в корзину\nconst token=localStorage.getItem('token');if(!token){console.error('No token found');return;}try{const response=await fetch('http://localhost:8000/api/cart/create/',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Token \".concat(token)},body:JSON.stringify({product_id:item.id})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.detail||'Ошибка при добавлении товара в корзину');}// Обновляем состояние корзины\nconst cartResponse=await fetch('http://localhost:8000/api/cart/',{headers:{'Authorization':\"Token \".concat(token)}});if(!cartResponse.ok){throw new Error('Failed to fetch cart data');}const cartData=await cartResponse.json();if(Array.isArray(cartData)&&cartData.length>0&&Array.isArray(cartData[0].items)){updateCartCount(cartData[0].items.length);}else{console.error('Invalid cart data:',cartData);}}catch(error){console.error('Error adding product to cart:',error);}},[updateCartCount]);return/*#__PURE__*/_jsx(CartContext.Provider,{value:{cartCount,updateCartCount,addToCart},children:children});};","map":{"version":3,"names":["React","createContext","useState","useCallback","jsx","_jsx","CartContext","CartProvider","_ref","children","cartCount","setCartCount","updateCartCount","count","addToCart","item","token","localStorage","getItem","console","error","response","fetch","method","headers","concat","body","JSON","stringify","product_id","id","ok","errorData","json","Error","detail","cartResponse","cartData","Array","isArray","length","items","Provider","value"],"sources":["/home/kiipod/projects/slwrm/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useCallback } from 'react';\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cartCount, setCartCount] = useState(0);\n\n  const updateCartCount = useCallback((count) => {\n    setCartCount(count);\n  }, []);\n\n  const addToCart = useCallback(async (item) => {\n    // Логика добавления товара в корзину\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('No token found');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:8000/api/cart/create/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`\n        },\n        body: JSON.stringify({ product_id: item.id })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Ошибка при добавлении товара в корзину');\n      }\n\n      // Обновляем состояние корзины\n      const cartResponse = await fetch('http://localhost:8000/api/cart/', {\n        headers: {\n          'Authorization': `Token ${token}`\n        }\n      });\n      if (!cartResponse.ok) {\n        throw new Error('Failed to fetch cart data');\n      }\n      const cartData = await cartResponse.json();\n      if (Array.isArray(cartData) && cartData.length > 0 && Array.isArray(cartData[0].items)) {\n        updateCartCount(cartData[0].items.length);\n      } else {\n        console.error('Invalid cart data:', cartData);\n      }\n\n    } catch (error) {\n      console.error('Error adding product to cart:', error);\n    }\n  }, [updateCartCount]);\n\n  return (\n    <CartContext.Provider value={{ cartCount, updateCartCount, addToCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpE,MAAO,MAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAC,CAE7C,KAAM,CAAAU,eAAe,CAAGT,WAAW,CAAEU,KAAK,EAAK,CAC7CF,YAAY,CAACE,KAAK,CAAC,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,SAAS,CAAGX,WAAW,CAAC,KAAO,CAAAY,IAAI,EAAK,CAC5C;AACA,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACF,KAAK,CAAE,CACVG,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC,CAC/B,OACF,CAEA,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,wCAAwC,CAAE,CACrEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,UAAAC,MAAA,CAAWT,KAAK,CACjC,CAAC,CACDU,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,UAAU,CAAEd,IAAI,CAACe,EAAG,CAAC,CAC9C,CAAC,CAAC,CAEF,GAAI,CAACT,QAAQ,CAACU,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAX,QAAQ,CAACY,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACG,MAAM,EAAI,wCAAwC,CAAC,CAC/E,CAEA;AACA,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAd,KAAK,CAAC,iCAAiC,CAAE,CAClEE,OAAO,CAAE,CACP,eAAe,UAAAC,MAAA,CAAWT,KAAK,CACjC,CACF,CAAC,CAAC,CACF,GAAI,CAACoB,YAAY,CAACL,EAAE,CAAE,CACpB,KAAM,IAAI,CAAAG,KAAK,CAAC,2BAA2B,CAAC,CAC9C,CACA,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAD,YAAY,CAACH,IAAI,CAAC,CAAC,CAC1C,GAAIK,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAIA,QAAQ,CAACG,MAAM,CAAG,CAAC,EAAIF,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC,CAAE,CACtF7B,eAAe,CAACyB,QAAQ,CAAC,CAAC,CAAC,CAACI,KAAK,CAACD,MAAM,CAAC,CAC3C,CAAC,IAAM,CACLrB,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAEiB,QAAQ,CAAC,CAC/C,CAEF,CAAE,MAAOjB,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACvD,CACF,CAAC,CAAE,CAACR,eAAe,CAAC,CAAC,CAErB,mBACEP,IAAA,CAACC,WAAW,CAACoC,QAAQ,EAACC,KAAK,CAAE,CAAEjC,SAAS,CAAEE,eAAe,CAAEE,SAAU,CAAE,CAAAL,QAAA,CACpEA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}