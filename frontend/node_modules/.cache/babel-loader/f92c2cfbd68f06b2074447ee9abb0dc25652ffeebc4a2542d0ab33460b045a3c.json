{"ast":null,"code":"import React from'react';import styles from'./Modal.module.scss';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Modal=_ref=>{let{isOpen,onClose,message}=_ref;if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:styles.modalOverlay,children:/*#__PURE__*/_jsx(\"div\",{className:styles.modal,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.modalContent,children:[/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsx(\"button\",{className:styles.modal__button,onClick:onClose,children:\"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"})]})})});};export default Modal;","map":{"version":3,"names":["React","styles","jsx","_jsx","jsxs","_jsxs","Modal","_ref","isOpen","onClose","message","className","modalOverlay","children","modal","modalContent","modal__button","onClick"],"sources":["/home/kiipod/projects/slwrm/frontend/src/components/Modal/Modal.jsx"],"sourcesContent":["import React from 'react';\nimport styles from './Modal.module.scss';\n\nconst Modal = ({ isOpen, onClose, message }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className={styles.modalOverlay}>\n      <div className={styles.modal}>\n        <div className={styles.modalContent}>\n          <p>{message}</p>\n          <button className={styles.modal__button} onClick={onClose}>Закрыть</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzC,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAAkC,IAAjC,CAAEC,MAAM,CAAEC,OAAO,CAAEC,OAAQ,CAAC,CAAAH,IAAA,CACzC,GAAI,CAACC,MAAM,CAAE,MAAO,KAAI,CAExB,mBACEL,IAAA,QAAKQ,SAAS,CAAEV,MAAM,CAACW,YAAa,CAAAC,QAAA,cAClCV,IAAA,QAAKQ,SAAS,CAAEV,MAAM,CAACa,KAAM,CAAAD,QAAA,cAC3BR,KAAA,QAAKM,SAAS,CAAEV,MAAM,CAACc,YAAa,CAAAF,QAAA,eAClCV,IAAA,MAAAU,QAAA,CAAIH,OAAO,CAAI,CAAC,cAChBP,IAAA,WAAQQ,SAAS,CAAEV,MAAM,CAACe,aAAc,CAACC,OAAO,CAAER,OAAQ,CAAAI,QAAA,CAAC,4CAAO,CAAQ,CAAC,EACxE,CAAC,CACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}