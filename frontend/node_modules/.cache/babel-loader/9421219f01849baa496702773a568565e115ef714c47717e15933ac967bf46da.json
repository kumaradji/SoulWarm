{"ast":null,"code":"import{useState,useEffect}from'react';function useWindowSize(){const[windowSize,setWindowSize]=useState({width:window.innerWidth,height:window.innerHeight});useEffect(()=>{function handleResize(){setWindowSize({width:window.innerWidth,height:window.innerHeight});}window.addEventListener('resize',handleResize);return()=>window.removeEventListener('resize',handleResize);},[]);return windowSize;}export default useWindowSize;","map":{"version":3,"names":["useState","useEffect","useWindowSize","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","handleResize","addEventListener","removeEventListener"],"sources":["/home/kiipod/projects/slwrm/frontend/src/hooks/useWindowSize.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useWindowSize() {\n    const [windowSize, setWindowSize] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    });\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowSize;\n}\n\nexport default useWindowSize;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACrB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGJ,QAAQ,CAAC,CACzCK,KAAK,CAAEC,MAAM,CAACC,UAAU,CACxBC,MAAM,CAAEF,MAAM,CAACG,WACnB,CAAC,CAAC,CAEFR,SAAS,CAAC,IAAM,CACZ,QAAS,CAAAS,YAAYA,CAAA,CAAG,CACpBN,aAAa,CAAC,CACVC,KAAK,CAAEC,MAAM,CAACC,UAAU,CACxBC,MAAM,CAAEF,MAAM,CAACG,WACnB,CAAC,CAAC,CACN,CAEAH,MAAM,CAACK,gBAAgB,CAAC,QAAQ,CAAED,YAAY,CAAC,CAC/C,MAAO,IAAMJ,MAAM,CAACM,mBAAmB,CAAC,QAAQ,CAAEF,YAAY,CAAC,CACnE,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAP,UAAU,CACrB,CAEA,cAAe,CAAAD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}